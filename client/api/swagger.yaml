---
swagger: "2.0"
info:
  description: "Articles that matter on social publishing platform"
  version: "1.0.0"
  title: "Aha.io API"
host: "secure.aha.io"
basePath: "/api/v1"
schemes:
- "https"
produces:
- "application/json"
paths:
  /features:
    get:
      tags:
      - "Features"
      summary: "Get all features"
      description: "Get all features"
      operationId: "getFeatures"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query"
        description: "Sub-string to match against feature name or ID"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "updated_since"
        in: "query"
        description: "UTC timestamp (in ISO8601 format) that the updated_at field\
          \ must be larger than."
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "UpdatedSince"
      - name: "tag"
        in: "query"
        description: "A string tag value."
        required: false
        type: "string"
        x-exportParamName: "Tag"
      - name: "assigned_to_user"
        in: "query"
        description: "The ID or email address of user to return assigned features\
          \ for."
        required: false
        type: "string"
        x-exportParamName: "AssignedToUser"
      - name: "page"
        in: "query"
        description: "A specific page of results."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Page"
      - name: "per_page"
        in: "query"
        description: "Number of results per page."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "PerPage"
      responses:
        200:
          description: "A list of features"
          schema:
            $ref: "#/definitions/FeaturesResponse"
  /features/{feature_id}:
    get:
      tags:
      - "Features"
      summary: ""
      description: "Get a specific feature"
      operationId: "getFeature"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "feature_id"
        in: "path"
        description: "Numeric ID, or key of the feature to be retrieved"
        required: true
        type: "string"
        x-exportParamName: "FeatureId"
      responses:
        200:
          description: "Information for a specific release"
          schema:
            $ref: "#/definitions/FeatureWrap"
    put:
      tags:
      - "Features"
      summary: "Update a feature's custom fields with tag-like value"
      description: "Update a feature's custom fields with tag-like value"
      operationId: "updateFeature"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "feature_id"
        in: "path"
        description: "Numeric ID, or key of the feature to be retrieved"
        required: true
        type: "string"
        x-exportParamName: "FeatureId"
      - in: "body"
        name: "feature"
        description: "Feature properties to update"
        required: true
        schema:
          $ref: "#/definitions/FeatureUpdate"
        x-exportParamName: "Feature"
      responses:
        200:
          description: "Information for a specific release"
          schema:
            $ref: "#/definitions/FeatureWrap"
  /releases/{release_id}/features:
    get:
      tags:
      - "Features"
      summary: "Get all features for a release"
      description: "Get all features for a release"
      operationId: "getReleaseFeatures"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "release_id"
        in: "path"
        description: "Numeric ID, or key of the release to retrieve features for"
        required: true
        type: "string"
        x-exportParamName: "ReleaseId"
      responses:
        200:
          description: "A list of features within a data envelope."
          schema:
            $ref: "#/definitions/FeaturesResponse"
  /products:
    get:
      tags:
      - "Products"
      summary: "Products API"
      description: "Get products list"
      operationId: "getProducts"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "A specific page of results."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Page"
      - name: "per_page"
        in: "query"
        description: "Number of results per page."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "PerPage"
      responses:
        200:
          description: "A list of products objects within a data envelope."
          schema:
            $ref: "#/definitions/ProductsResponse"
  /products/{product_id}:
    get:
      tags:
      - "Products"
      summary: "Products API"
      description: "Get product info"
      operationId: "getProduct"
      produces:
      - "application/json"
      parameters:
      - name: "product_id"
        in: "path"
        description: "Numeric ID, or key of the feature to be retrieved"
        required: true
        type: "string"
        x-exportParamName: "ProductId"
      responses:
        200:
          description: "A list of products objects within a data envelope."
          schema:
            $ref: "#/definitions/ProductResponse"
  /releases/{release_id}:
    get:
      tags:
      - "Releases"
      summary: ""
      description: "Get a specific release"
      operationId: "getRelease"
      produces:
      - "application/json"
      parameters:
      - name: "release_id"
        in: "path"
        description: "Numeric ID, or key of the release to be retrieved"
        required: true
        type: "string"
        x-exportParamName: "ReleaseId"
      responses:
        200:
          description: "Information for a specific release"
          schema:
            $ref: "#/definitions/ReleaseWrap"
  /products/{product_id}/releases:
    get:
      tags:
      - "Releases"
      summary: ""
      description: "Get releases for a product release"
      operationId: "getProductReleases"
      produces:
      - "application/json"
      parameters:
      - name: "product_id"
        in: "path"
        description: "Numeric ID, or key of the product to retrieve releases for."
        required: true
        type: "string"
        x-exportParamName: "ProductId"
      - name: "page"
        in: "query"
        description: "A specific page of results."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Page"
      - name: "per_page"
        in: "query"
        description: "Number of results per page."
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "PerPage"
      responses:
        200:
          description: "Information for a specific release"
          schema:
            $ref: "#/definitions/ReleasesResponse"
  /products/{product_id}/releases/{release_id}:
    put:
      tags:
      - "Releases"
      summary: "Update a release"
      description: "Update a release"
      operationId: "updateProductRelease"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "product_id"
        in: "path"
        description: "Numeric ID, or key of the product to create the release in"
        required: true
        type: "string"
        x-exportParamName: "ProductId"
      - name: "release_id"
        in: "path"
        description: "Numeric ID, or key of the release to be updated"
        required: true
        type: "string"
        x-exportParamName: "ReleaseId"
      - in: "body"
        name: "release"
        description: "Release properties to update"
        required: true
        schema:
          $ref: "#/definitions/ReleaseUpdateWrap"
        x-exportParamName: "Release"
      responses:
        200:
          description: "Information for a specific release"
          schema:
            $ref: "#/definitions/ReleaseWrap"
definitions:
  FeatureWrap:
    type: "object"
    properties:
      feature:
        $ref: "#/definitions/Feature"
    example:
      feature:
        reference_num: "reference_num"
        resource: "resource"
        name: "name"
        due_date: "2000-01-23"
        created_at: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        url: "url"
        start_date: "2000-01-23"
        tags:
        - "tags"
        - "tags"
  FeaturesResponse:
    type: "object"
    properties:
      features:
        type: "array"
        items:
          $ref: "#/definitions/FeatureMeta"
      pagination:
        $ref: "#/definitions/Pagination"
    example:
      features:
      - reference_num: "reference_num"
        resource: "resource"
        name: "name"
        created_at: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        url: "url"
      - reference_num: "reference_num"
        resource: "resource"
        name: "name"
        created_at: "2000-01-23T04:56:07.000+00:00"
        id: "id"
        url: "url"
      pagination:
        total_records: 0
        total_pages: 6
        current_page: 1
  ReleaseWrap:
    type: "object"
    properties:
      release:
        $ref: "#/definitions/Release"
    example:
      release:
        reference_num: "reference_num"
        release_date: "2000-01-23"
        resource: "resource"
        name: "name"
        id: "id"
        external_release_date: "2000-01-23"
        released: true
        parking_lot: true
        url: "url"
        start_date: "2000-01-23"
  ReleasesResponse:
    type: "object"
    properties:
      releases:
        type: "array"
        items:
          $ref: "#/definitions/Release"
      pagination:
        $ref: "#/definitions/Pagination"
    example:
      pagination:
        total_records: 0
        total_pages: 6
        current_page: 1
      releases:
      - reference_num: "reference_num"
        release_date: "2000-01-23"
        resource: "resource"
        name: "name"
        id: "id"
        external_release_date: "2000-01-23"
        released: true
        parking_lot: true
        url: "url"
        start_date: "2000-01-23"
      - reference_num: "reference_num"
        release_date: "2000-01-23"
        resource: "resource"
        name: "name"
        id: "id"
        external_release_date: "2000-01-23"
        released: true
        parking_lot: true
        url: "url"
        start_date: "2000-01-23"
  Pagination:
    type: "object"
    properties:
      total_records:
        type: "integer"
        format: "int64"
      total_pages:
        type: "integer"
        format: "int64"
      current_page:
        type: "integer"
        format: "int64"
    example:
      total_records: 0
      total_pages: 6
      current_page: 1
  FeatureMeta:
    type: "object"
    properties:
      id:
        type: "string"
      reference_num:
        type: "string"
      name:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      url:
        type: "string"
      resource:
        type: "string"
    example:
      reference_num: "reference_num"
      resource: "resource"
      name: "name"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      url: "url"
  Feature:
    type: "object"
    properties:
      id:
        type: "string"
      reference_num:
        type: "string"
      name:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      start_date:
        type: "string"
        format: "date"
        description: "Start date in YYYY-MM-DD format."
      due_date:
        type: "string"
        format: "date"
        description: "Due date in YYYY-MM-DD format."
      url:
        type: "string"
      resource:
        type: "string"
      tags:
        type: "array"
        items:
          type: "string"
    example:
      reference_num: "reference_num"
      resource: "resource"
      name: "name"
      due_date: "2000-01-23"
      created_at: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      url: "url"
      start_date: "2000-01-23"
      tags:
      - "tags"
      - "tags"
  ProductResponse:
    type: "object"
    properties:
      product:
        $ref: "#/definitions/Product"
    example:
      product:
        product_line: true
        updated_at: "2000-01-23T04:56:07.000+00:00"
        resource: "resource"
        name: "name"
        created_at: "2000-01-23T04:56:07.000+00:00"
        has_ideas: true
        reference_prefix: "reference_prefix"
        has_master_features: true
        id: "id"
        url: "url"
  ProductsResponse:
    type: "object"
    properties:
      products:
        type: "array"
        items:
          $ref: "#/definitions/ProductMeta"
      pagination:
        $ref: "#/definitions/Pagination"
    example:
      pagination:
        total_records: 0
        total_pages: 6
        current_page: 1
      products:
      - product_line: true
        name: "name"
        created_at: "2000-01-23T04:56:07.000+00:00"
        reference_prefix: "reference_prefix"
        id: "id"
      - product_line: true
        name: "name"
        created_at: "2000-01-23T04:56:07.000+00:00"
        reference_prefix: "reference_prefix"
        id: "id"
  ProductMeta:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the product."
      reference_prefix:
        type: "string"
        description: "The reference prefix slug for the product."
      name:
        type: "string"
        description: "The name for the product."
      product_line:
        type: "boolean"
        description: "Whether the product is a product line or not."
      created_at:
        type: "string"
        format: "date-time"
        description: "The date-time when the product was created."
    example:
      product_line: true
      name: "name"
      created_at: "2000-01-23T04:56:07.000+00:00"
      reference_prefix: "reference_prefix"
      id: "id"
  Product:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the product."
      reference_prefix:
        type: "string"
        description: "The reference prefix slug for the product."
      name:
        type: "string"
        description: "The name for the product."
      product_line:
        type: "boolean"
        description: "Whether the product is a product line or not."
      created_at:
        type: "string"
        format: "date-time"
        description: "The date-time when the product was created."
      updated_at:
        type: "string"
        format: "date-time"
        description: "The date-time when the product was updated."
      url:
        type: "string"
        description: "User URL for the project."
      resource:
        type: "string"
        description: "User URL for the project."
      has_ideas:
        type: "boolean"
        description: "Whether the product has ideas or not."
      has_master_features:
        type: "boolean"
        description: "Whether the product has master features or not."
    example:
      product_line: true
      updated_at: "2000-01-23T04:56:07.000+00:00"
      resource: "resource"
      name: "name"
      created_at: "2000-01-23T04:56:07.000+00:00"
      has_ideas: true
      reference_prefix: "reference_prefix"
      has_master_features: true
      id: "id"
      url: "url"
  Release:
    type: "object"
    properties:
      id:
        type: "string"
        description: "A unique identifier for the release."
      reference_num:
        type: "string"
        description: "Release referenence number."
      name:
        type: "string"
        description: "Release name."
      start_date:
        type: "string"
        format: "date"
        description: "Start date in YYYY-MM-DD format."
      release_date:
        type: "string"
        format: "date"
        description: "Release date in YYYY-MM-DD format."
      external_release_date:
        type: "string"
        format: "date"
        description: "External release date in YYYY-MM-DD format."
      released:
        type: "boolean"
      parking_lot:
        type: "boolean"
      url:
        type: "string"
        description: "Web URL for release."
      resource:
        type: "string"
        description: "API URL for release."
    example:
      reference_num: "reference_num"
      release_date: "2000-01-23"
      resource: "resource"
      name: "name"
      id: "id"
      external_release_date: "2000-01-23"
      released: true
      parking_lot: true
      url: "url"
      start_date: "2000-01-23"
  FeatureUpdate:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Name of the feature"
      description:
        type: "string"
        description: "Description of the feature and it can include HTML formatting."
      created_by:
        type: "string"
        description: "Email address of user that created the feature."
      assigned_to_user:
        type: "string"
        description: "Email address of user that is assigned the feature."
      tags:
        type: "string"
        description: "Tags can be automatically assigned to the new feature. If more\
          \ than one tag is used then tags should be separated by commas"
      original_estimate_text:
        type: "string"
        description: "Set the original estimated effort in a text format, you can\
          \ use d, h, min (or 'p' for points) to indicate the units to use."
      remaining_estimate_text:
        type: "string"
        description: " Set the remaining estimated effort in a text format, you can\
          \ use d, h, min (or 'p' for points) to indicate the units to use."
      start_date:
        type: "string"
        format: "date"
        description: "Date that work will start on the feature in format YYYY-MM-DD."
      due_date:
        type: "string"
        format: "date"
        description: "Date that work is due to be completed on the feature in format\
          \ YYYY-MM-DD."
      release_phase:
        type: "string"
        description: "Name or id of release phase which the feature belongs to."
      initiative:
        type: "string"
        description: "Name or id of initiative which the feature belongs to."
      master_feature:
        type: "string"
        description: "Name or id of master feature which the feature belongs to."
    example:
      initiative: "initiative"
      release_phase: "release_phase"
      original_estimate_text: "original_estimate_text"
      remaining_estimate_text: "remaining_estimate_text"
      name: "name"
      assigned_to_user: "assigned_to_user"
      due_date: "2000-01-23"
      description: "description"
      created_by: "created_by"
      master_feature: "master_feature"
      tags: "tags"
      start_date: "2000-01-23"
  ReleaseUpdateWrap:
    type: "object"
    properties:
      release:
        $ref: "#/definitions/ReleaseUpdate"
    example:
      release:
        release_date: "2000-01-23"
        name: "name"
        development_started_on: "2000-01-23"
        external_release_date: "2000-01-23"
        parking_lot: true
        start_date: "2000-01-23"
  ReleaseUpdate:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Release name."
      start_date:
        type: "string"
        format: "date"
        description: "Start date in YYYY-MM-DD format."
      release_date:
        type: "string"
        format: "date"
        description: "Release date in YYYY-MM-DD format."
      development_started_on:
        type: "string"
        format: "date"
        description: "Date Development started in format YYYY-MM-DD"
      external_release_date:
        type: "string"
        format: "date"
        description: "The external release date for this feature in format YYYY-MM-DD"
      parking_lot:
        type: "boolean"
    example:
      release_date: "2000-01-23"
      name: "name"
      development_started_on: "2000-01-23"
      external_release_date: "2000-01-23"
      parking_lot: true
      start_date: "2000-01-23"
